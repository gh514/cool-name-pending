type token =
  | INT of (int)
  | VAR of (string)
  | TRUE
  | FALSE
  | GRID
  | CROSS
  | CELL
  | REGION
  | CENTRELINE
  | EDGELINE
  | CENTRELOOP
  | EDGELOOP
  | R
  | C
  | INTDEC
  | BOOLDEC
  | ROW
  | COLUMN
  | BOX
  | CELLDEC
  | ADD
  | SUB
  | MUL
  | DIV
  | ABS
  | DIFF
  | AND
  | OR
  | NOT
  | XOR
  | IF
  | THEN
  | ELSE
  | EQUAL
  | LT
  | GT
  | LTE
  | GTE
  | UNEQUAL
  | MEMBER
  | ADJACENT
  | DIAGADJACENT
  | LEFTIMP
  | RIGHTIMP
  | BIIMP
  | LBRACK
  | RBRACK
  | LSBRACK
  | RSBRACK
  | SEMICOLON
  | POINT
  | TO
  | COMMA
  | HALF
  | FORALL
  | EXISTS
  | NFORALL
  | NEXISTS
  | IN
  | ARE
  | SIZE
  | LENGTH
  | SUM
  | DISTINCT
  | EQUIVALENT
  | EOF
  | HIGH
  | LOW

open Parsing;;
let _ = parse_error;;
# 3 "parser.mly"

let location = Parsing.symbol_start_pos;;

# 78 "parser.ml"
let yytransl_const = [|
  259 (* TRUE *);
  260 (* FALSE *);
  261 (* GRID *);
  262 (* CROSS *);
  263 (* CELL *);
  264 (* REGION *);
  265 (* CENTRELINE *);
  266 (* EDGELINE *);
  267 (* CENTRELOOP *);
  268 (* EDGELOOP *);
  269 (* R *);
  270 (* C *);
  271 (* INTDEC *);
  272 (* BOOLDEC *);
  273 (* ROW *);
  274 (* COLUMN *);
  275 (* BOX *);
  276 (* CELLDEC *);
  277 (* ADD *);
  278 (* SUB *);
  279 (* MUL *);
  280 (* DIV *);
  281 (* ABS *);
  282 (* DIFF *);
  283 (* AND *);
  284 (* OR *);
  285 (* NOT *);
  286 (* XOR *);
  287 (* IF *);
  288 (* THEN *);
  289 (* ELSE *);
  290 (* EQUAL *);
  291 (* LT *);
  292 (* GT *);
  293 (* LTE *);
  294 (* GTE *);
  295 (* UNEQUAL *);
  296 (* MEMBER *);
  297 (* ADJACENT *);
  298 (* DIAGADJACENT *);
  299 (* LEFTIMP *);
  300 (* RIGHTIMP *);
  301 (* BIIMP *);
  302 (* LBRACK *);
  303 (* RBRACK *);
  304 (* LSBRACK *);
  305 (* RSBRACK *);
  306 (* SEMICOLON *);
  307 (* POINT *);
  308 (* TO *);
  309 (* COMMA *);
  310 (* HALF *);
  311 (* FORALL *);
  312 (* EXISTS *);
  313 (* NFORALL *);
  314 (* NEXISTS *);
  315 (* IN *);
  316 (* ARE *);
  317 (* SIZE *);
  318 (* LENGTH *);
  319 (* SUM *);
  320 (* DISTINCT *);
  321 (* EQUIVALENT *);
    0 (* EOF *);
  322 (* HIGH *);
  323 (* LOW *);
    0|]

let yytransl_block = [|
  257 (* INT *);
  258 (* VAR *);
    0|]

let yylhs = "\255\255\
\001\000\001\000\002\000\002\000\002\000\002\000\002\000\002\000\
\002\000\002\000\002\000\007\000\007\000\007\000\007\000\007\000\
\007\000\007\000\007\000\007\000\008\000\008\000\006\000\006\000\
\006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
\009\000\009\000\010\000\010\000\010\000\010\000\010\000\011\000\
\011\000\011\000\011\000\012\000\012\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\004\000\004\000\
\005\000\005\000\005\000\000\000"

let yylen = "\002\000\
\003\000\002\000\001\000\001\000\001\000\001\000\004\000\003\000\
\001\000\002\000\003\000\001\000\001\000\001\000\001\000\001\000\
\001\000\001\000\001\000\001\000\004\000\002\000\001\000\003\000\
\001\000\001\000\002\000\001\000\002\000\001\000\001\000\003\000\
\001\000\003\000\002\000\002\000\002\000\002\000\002\000\001\000\
\001\000\001\000\001\000\001\000\001\000\001\000\001\000\003\000\
\003\000\003\000\003\000\002\000\002\000\003\000\003\000\003\000\
\003\000\006\000\002\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\002\000\005\000\003\000\003\000\
\005\000\008\000\006\000\003\000\005\000\002\000\004\000\002\000\
\001\000\002\000\003\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\000\000\084\000\000\000\000\000\005\000\006\000\
\003\000\004\000\023\000\014\000\000\000\016\000\017\000\018\000\
\019\000\000\000\012\000\013\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\080\000\
\040\000\041\000\042\000\043\000\002\000\000\000\000\000\000\000\
\009\000\000\000\047\000\000\000\000\000\000\000\031\000\030\000\
\000\000\027\000\029\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\069\000\001\000\000\000\000\000\
\000\000\015\000\020\000\000\000\000\000\079\000\000\000\000\000\
\000\000\000\000\011\000\032\000\024\000\000\000\000\000\000\000\
\000\000\034\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\083\000\035\000\038\000\036\000\037\000\039\000\
\025\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\044\000\045\000\077\000\000\000\
\000\000\000\000\000\000\075\000\000\000\074\000"

let yydgoto = "\002\000\
\004\000\038\000\039\000\005\000\040\000\041\000\042\000\043\000\
\044\000\085\000\045\000\151\000"

let yysindex = "\010\000\
\010\255\000\000\017\255\000\000\023\009\029\255\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\197\009\000\000\000\000\139\009\081\009\000\000\081\009\
\081\009\081\009\081\009\081\009\081\009\081\009\197\009\000\000\
\000\000\000\000\000\000\000\000\000\000\002\255\230\009\036\000\
\000\000\111\255\000\000\001\255\087\255\038\255\000\000\000\000\
\244\254\000\000\000\000\117\010\250\254\242\254\167\255\238\254\
\212\255\255\009\013\255\255\254\253\254\165\009\197\009\197\009\
\197\009\000\000\081\009\081\009\081\009\081\009\081\009\081\009\
\081\009\081\009\081\009\081\009\081\009\081\009\081\009\081\009\
\081\009\081\009\081\009\022\255\000\000\000\000\115\255\015\255\
\197\009\000\000\000\000\197\009\243\254\000\000\197\009\081\009\
\242\254\081\009\000\000\000\000\000\000\086\255\230\254\034\255\
\034\255\000\000\250\254\250\254\242\254\242\254\250\254\242\254\
\242\254\238\254\238\254\238\254\238\254\238\254\238\254\167\010\
\167\010\142\010\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\115\255\030\255\197\009\034\255\115\255\043\255\047\255\
\250\254\030\010\197\009\197\009\013\255\223\254\034\255\041\255\
\081\009\081\009\047\255\047\255\000\000\000\000\000\000\061\255\
\055\010\117\010\081\009\000\000\086\010\000\000"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\182\008\225\008\061\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\146\005\110\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\068\008\121\000\030\004\000\000\206\005\
\000\000\000\000\196\009\165\003\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\118\000\000\000\000\000\000\000\000\000\181\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\095\004\000\000\000\000\000\000\000\000\000\000\225\003\171\002\
\234\002\000\000\241\000\060\001\155\004\217\004\120\001\021\005\
\081\005\012\006\072\006\132\006\198\006\009\007\071\007\131\007\
\191\007\001\008\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\043\003\000\000\000\000\180\001\
\240\001\000\000\000\000\000\000\000\000\000\000\103\003\000\000\
\000\000\000\000\044\002\111\002\000\000\000\000\000\000\000\000\
\000\000\130\008\000\000\000\000\000\000\000\000"

let yygindex = "\000\000\
\000\000\016\000\251\255\000\000\039\000\226\255\080\000\081\000\
\017\000\000\000\000\000\000\000"

let yytablesize = 3034
let yytable = "\059\000\
\031\000\095\000\067\000\068\000\069\000\070\000\067\000\068\000\
\071\000\072\000\001\000\073\000\071\000\140\000\003\000\050\000\
\051\000\006\000\052\000\053\000\054\000\055\000\056\000\057\000\
\058\000\064\000\134\000\066\000\124\000\125\000\149\000\150\000\
\084\000\049\000\046\000\086\000\084\000\135\000\094\000\064\000\
\089\000\066\000\062\000\063\000\084\000\101\000\060\000\061\000\
\132\000\097\000\064\000\065\000\066\000\064\000\065\000\066\000\
\131\000\060\000\088\000\100\000\030\000\107\000\108\000\109\000\
\110\000\111\000\112\000\113\000\114\000\115\000\116\000\117\000\
\118\000\119\000\120\000\121\000\122\000\103\000\104\000\105\000\
\060\000\106\000\126\000\127\000\128\000\064\000\139\000\066\000\
\145\000\142\000\137\000\152\000\138\000\012\000\090\000\014\000\
\015\000\016\000\017\000\141\000\066\000\019\000\020\000\144\000\
\133\000\091\000\155\000\060\000\088\000\081\000\136\000\007\000\
\008\000\009\000\010\000\011\000\129\000\082\000\047\000\011\000\
\053\000\123\000\047\000\018\000\092\000\093\000\000\000\021\000\
\022\000\048\000\000\000\021\000\022\000\048\000\000\000\000\000\
\000\000\000\000\000\000\153\000\154\000\000\000\000\000\000\000\
\000\000\000\000\000\000\143\000\000\000\157\000\087\000\000\000\
\000\000\000\000\147\000\148\000\030\000\000\000\031\000\000\000\
\130\000\000\000\031\000\000\000\000\000\000\000\000\000\007\000\
\008\000\009\000\010\000\011\000\000\000\012\000\013\000\014\000\
\015\000\016\000\017\000\018\000\022\000\019\000\020\000\021\000\
\022\000\023\000\024\000\067\000\096\000\069\000\070\000\026\000\
\027\000\071\000\072\000\028\000\073\000\029\000\000\000\000\000\
\074\000\075\000\076\000\077\000\078\000\079\000\000\000\000\000\
\000\000\080\000\081\000\082\000\030\000\000\000\031\000\000\000\
\000\000\084\000\000\000\000\000\000\000\033\000\034\000\035\000\
\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\067\000\068\000\069\000\070\000\000\000\000\000\071\000\072\000\
\048\000\073\000\000\000\098\000\000\000\074\000\075\000\076\000\
\077\000\078\000\079\000\000\000\000\000\000\000\080\000\081\000\
\082\000\015\000\015\000\015\000\015\000\015\000\084\000\031\000\
\015\000\031\000\031\000\031\000\031\000\015\000\031\000\031\000\
\031\000\015\000\015\000\015\000\031\000\031\000\031\000\031\000\
\031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
\031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
\015\000\031\000\031\000\031\000\031\000\031\000\015\000\031\000\
\015\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
\031\000\031\000\031\000\049\000\031\000\020\000\020\000\020\000\
\020\000\020\000\000\000\030\000\020\000\030\000\030\000\030\000\
\030\000\020\000\030\000\030\000\030\000\020\000\020\000\020\000\
\030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
\030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
\030\000\030\000\030\000\030\000\020\000\030\000\030\000\030\000\
\030\000\030\000\020\000\030\000\020\000\030\000\030\000\030\000\
\030\000\030\000\030\000\030\000\030\000\030\000\030\000\055\000\
\030\000\053\000\053\000\053\000\053\000\053\000\000\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\000\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\007\000\053\000\022\000\022\000\022\000\
\022\000\022\000\000\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\000\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\053\000\
\022\000\048\000\048\000\048\000\048\000\048\000\000\000\048\000\
\048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
\048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
\048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
\048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
\048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
\048\000\048\000\048\000\000\000\048\000\048\000\048\000\048\000\
\048\000\048\000\048\000\073\000\048\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\049\000\049\000\049\000\049\000\
\049\000\000\000\049\000\049\000\049\000\049\000\049\000\049\000\
\049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
\049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
\049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
\049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
\049\000\049\000\049\000\049\000\049\000\049\000\070\000\049\000\
\049\000\049\000\049\000\049\000\049\000\049\000\000\000\049\000\
\055\000\055\000\055\000\055\000\055\000\000\000\055\000\055\000\
\055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
\055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
\055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
\055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
\055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
\055\000\055\000\072\000\055\000\055\000\055\000\055\000\055\000\
\055\000\055\000\000\000\055\000\007\000\007\000\007\000\007\000\
\007\000\000\000\007\000\007\000\007\000\007\000\007\000\007\000\
\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
\007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
\007\000\008\000\007\000\007\000\007\000\007\000\000\000\007\000\
\049\000\049\000\049\000\049\000\049\000\000\000\049\000\049\000\
\049\000\049\000\049\000\049\000\049\000\053\000\049\000\049\000\
\049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
\049\000\049\000\049\000\049\000\049\000\049\000\049\000\053\000\
\053\000\049\000\049\000\049\000\049\000\049\000\049\000\053\000\
\053\000\053\000\049\000\049\000\049\000\049\000\053\000\049\000\
\053\000\053\000\000\000\053\000\053\000\053\000\049\000\049\000\
\049\000\049\000\076\000\053\000\073\000\073\000\073\000\073\000\
\073\000\000\000\073\000\073\000\073\000\073\000\073\000\073\000\
\073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
\073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
\073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
\073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
\073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
\073\000\000\000\073\000\073\000\073\000\073\000\021\000\073\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\070\000\
\070\000\070\000\070\000\070\000\000\000\070\000\070\000\070\000\
\070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
\070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
\070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
\070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
\070\000\070\000\070\000\070\000\070\000\070\000\070\000\070\000\
\070\000\070\000\070\000\070\000\033\000\070\000\070\000\070\000\
\070\000\000\000\070\000\072\000\072\000\072\000\072\000\072\000\
\000\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
\072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
\072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
\072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
\072\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
\072\000\072\000\072\000\072\000\072\000\072\000\000\000\072\000\
\071\000\072\000\072\000\072\000\072\000\000\000\072\000\000\000\
\000\000\000\000\008\000\008\000\008\000\008\000\008\000\000\000\
\008\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\008\000\052\000\008\000\000\000\
\008\000\008\000\008\000\008\000\000\000\008\000\000\000\000\000\
\000\000\000\000\000\000\076\000\076\000\076\000\076\000\076\000\
\000\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
\076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
\076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
\076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
\076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
\076\000\076\000\076\000\076\000\076\000\076\000\054\000\076\000\
\000\000\076\000\076\000\076\000\076\000\000\000\076\000\021\000\
\021\000\021\000\021\000\021\000\000\000\021\000\021\000\021\000\
\021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
\021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
\021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
\021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
\021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
\021\000\021\000\050\000\021\000\000\000\021\000\021\000\021\000\
\021\000\000\000\021\000\000\000\000\000\033\000\033\000\033\000\
\033\000\033\000\000\000\033\000\033\000\033\000\033\000\033\000\
\033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
\033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
\033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
\033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
\033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
\051\000\000\000\000\000\033\000\033\000\033\000\033\000\000\000\
\033\000\071\000\071\000\071\000\071\000\071\000\000\000\071\000\
\071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
\071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
\071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
\071\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
\000\000\071\000\071\000\071\000\071\000\071\000\071\000\071\000\
\071\000\071\000\071\000\071\000\056\000\071\000\000\000\071\000\
\071\000\071\000\071\000\000\000\071\000\000\000\052\000\052\000\
\052\000\052\000\052\000\000\000\052\000\052\000\052\000\052\000\
\052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
\052\000\052\000\000\000\000\000\052\000\052\000\052\000\052\000\
\000\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
\052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
\052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
\057\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
\000\000\052\000\000\000\000\000\000\000\000\000\000\000\054\000\
\054\000\054\000\054\000\054\000\000\000\054\000\054\000\054\000\
\054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
\054\000\054\000\054\000\000\000\000\000\054\000\054\000\054\000\
\054\000\000\000\054\000\054\000\054\000\054\000\054\000\054\000\
\054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
\054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
\054\000\046\000\054\000\054\000\054\000\054\000\054\000\054\000\
\054\000\000\000\054\000\050\000\050\000\050\000\050\000\050\000\
\000\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
\050\000\050\000\050\000\050\000\050\000\050\000\050\000\000\000\
\000\000\050\000\050\000\050\000\050\000\000\000\050\000\050\000\
\050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
\050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
\050\000\050\000\050\000\050\000\050\000\059\000\050\000\050\000\
\050\000\050\000\050\000\050\000\050\000\000\000\050\000\000\000\
\000\000\051\000\051\000\051\000\051\000\051\000\000\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\051\000\051\000\000\000\000\000\051\000\
\051\000\051\000\051\000\000\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\060\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\000\000\051\000\056\000\056\000\056\000\
\056\000\056\000\000\000\056\000\056\000\056\000\056\000\056\000\
\056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
\056\000\000\000\000\000\056\000\056\000\056\000\056\000\000\000\
\056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
\056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
\056\000\056\000\056\000\056\000\056\000\056\000\056\000\061\000\
\056\000\056\000\056\000\056\000\056\000\056\000\056\000\000\000\
\056\000\057\000\057\000\057\000\057\000\057\000\000\000\057\000\
\057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
\057\000\057\000\057\000\057\000\057\000\000\000\000\000\057\000\
\057\000\057\000\057\000\000\000\057\000\057\000\057\000\057\000\
\057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
\057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
\057\000\057\000\057\000\062\000\057\000\057\000\057\000\057\000\
\057\000\057\000\057\000\000\000\057\000\000\000\000\000\000\000\
\000\000\000\000\046\000\046\000\046\000\046\000\046\000\000\000\
\046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
\046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
\046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
\046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
\046\000\033\000\000\000\000\000\046\000\046\000\046\000\046\000\
\046\000\046\000\046\000\046\000\046\000\063\000\000\000\000\000\
\046\000\046\000\046\000\046\000\000\000\046\000\059\000\059\000\
\059\000\059\000\059\000\000\000\059\000\059\000\059\000\059\000\
\059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
\059\000\059\000\000\000\000\000\000\000\000\000\059\000\059\000\
\000\000\000\000\059\000\000\000\059\000\059\000\059\000\059\000\
\059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
\059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
\000\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
\064\000\059\000\000\000\000\000\060\000\060\000\060\000\060\000\
\060\000\000\000\060\000\060\000\060\000\060\000\060\000\060\000\
\060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
\000\000\000\000\000\000\000\000\060\000\060\000\000\000\000\000\
\060\000\000\000\060\000\060\000\060\000\060\000\060\000\060\000\
\060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
\060\000\060\000\060\000\060\000\060\000\060\000\000\000\060\000\
\060\000\060\000\060\000\060\000\060\000\060\000\065\000\060\000\
\061\000\061\000\061\000\061\000\061\000\000\000\061\000\061\000\
\061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
\061\000\061\000\061\000\061\000\000\000\000\000\000\000\000\000\
\061\000\061\000\000\000\000\000\061\000\000\000\061\000\061\000\
\061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
\061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
\061\000\061\000\000\000\061\000\061\000\061\000\061\000\061\000\
\061\000\061\000\066\000\061\000\062\000\062\000\062\000\062\000\
\062\000\000\000\062\000\062\000\062\000\062\000\062\000\062\000\
\062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
\000\000\000\000\000\000\000\000\062\000\062\000\000\000\000\000\
\062\000\000\000\062\000\062\000\062\000\062\000\062\000\062\000\
\062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
\062\000\062\000\062\000\062\000\062\000\062\000\000\000\062\000\
\062\000\062\000\062\000\062\000\062\000\062\000\067\000\062\000\
\000\000\000\000\000\000\000\000\000\000\000\000\063\000\063\000\
\063\000\063\000\063\000\000\000\063\000\063\000\063\000\063\000\
\063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
\063\000\063\000\000\000\000\000\000\000\000\000\063\000\063\000\
\000\000\000\000\063\000\000\000\063\000\063\000\063\000\063\000\
\063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
\063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
\000\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
\068\000\063\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\064\000\064\000\064\000\064\000\064\000\000\000\064\000\
\064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
\064\000\064\000\064\000\064\000\064\000\000\000\000\000\000\000\
\000\000\064\000\064\000\000\000\000\000\064\000\000\000\064\000\
\064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
\064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
\064\000\064\000\064\000\000\000\064\000\064\000\064\000\064\000\
\064\000\064\000\064\000\078\000\064\000\000\000\000\000\065\000\
\065\000\065\000\065\000\065\000\000\000\065\000\065\000\065\000\
\065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
\065\000\065\000\065\000\000\000\000\000\000\000\000\000\065\000\
\065\000\000\000\000\000\065\000\000\000\065\000\065\000\065\000\
\065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
\065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
\065\000\000\000\065\000\065\000\065\000\065\000\065\000\065\000\
\065\000\058\000\065\000\066\000\066\000\066\000\066\000\066\000\
\000\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
\066\000\066\000\066\000\066\000\066\000\066\000\066\000\000\000\
\000\000\000\000\000\000\066\000\066\000\000\000\000\000\066\000\
\000\000\066\000\066\000\066\000\000\000\000\000\000\000\000\000\
\000\000\000\000\066\000\066\000\066\000\066\000\066\000\066\000\
\066\000\066\000\066\000\066\000\066\000\026\000\066\000\066\000\
\066\000\066\000\066\000\066\000\066\000\000\000\066\000\067\000\
\067\000\067\000\067\000\067\000\000\000\067\000\067\000\067\000\
\067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
\067\000\067\000\067\000\000\000\000\000\000\000\000\000\067\000\
\067\000\000\000\000\000\067\000\000\000\067\000\067\000\067\000\
\028\000\000\000\000\000\000\000\000\000\000\000\067\000\067\000\
\067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
\067\000\000\000\067\000\067\000\067\000\067\000\067\000\067\000\
\067\000\000\000\067\000\000\000\000\000\000\000\000\000\000\000\
\000\000\068\000\068\000\068\000\068\000\068\000\000\000\068\000\
\068\000\068\000\068\000\068\000\068\000\068\000\068\000\068\000\
\068\000\068\000\068\000\068\000\068\000\000\000\037\000\000\000\
\000\000\068\000\068\000\000\000\000\000\068\000\000\000\068\000\
\068\000\068\000\000\000\000\000\000\000\000\000\000\000\000\000\
\068\000\068\000\068\000\000\000\000\000\068\000\068\000\068\000\
\068\000\068\000\068\000\000\000\068\000\068\000\068\000\068\000\
\068\000\068\000\068\000\000\000\068\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\078\000\078\000\078\000\078\000\
\078\000\000\000\078\000\078\000\078\000\078\000\078\000\078\000\
\078\000\078\000\078\000\078\000\078\000\078\000\078\000\078\000\
\000\000\000\000\000\000\000\000\078\000\078\000\000\000\000\000\
\078\000\000\000\078\000\078\000\078\000\000\000\000\000\000\000\
\000\000\000\000\000\000\078\000\078\000\078\000\000\000\000\000\
\000\000\078\000\078\000\078\000\078\000\078\000\000\000\078\000\
\078\000\078\000\078\000\078\000\078\000\078\000\000\000\078\000\
\000\000\000\000\058\000\058\000\058\000\058\000\058\000\000\000\
\058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
\058\000\058\000\058\000\058\000\058\000\058\000\000\000\000\000\
\000\000\000\000\058\000\058\000\000\000\000\000\058\000\000\000\
\058\000\058\000\058\000\000\000\000\000\000\000\000\000\000\000\
\000\000\058\000\058\000\058\000\000\000\000\000\000\000\058\000\
\058\000\058\000\058\000\058\000\000\000\058\000\058\000\058\000\
\058\000\058\000\058\000\058\000\000\000\058\000\000\000\000\000\
\000\000\000\000\000\000\026\000\000\000\000\000\026\000\000\000\
\000\000\000\000\026\000\000\000\026\000\026\000\000\000\000\000\
\026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
\026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
\026\000\026\000\026\000\000\000\026\000\000\000\026\000\026\000\
\026\000\026\000\026\000\026\000\000\000\000\000\028\000\000\000\
\000\000\026\000\000\000\000\000\000\000\028\000\000\000\028\000\
\028\000\000\000\000\000\028\000\028\000\000\000\028\000\000\000\
\028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
\028\000\028\000\028\000\028\000\028\000\028\000\000\000\028\000\
\000\000\028\000\028\000\028\000\028\000\028\000\028\000\007\000\
\008\000\009\000\010\000\011\000\028\000\012\000\013\000\014\000\
\015\000\016\000\017\000\018\000\000\000\019\000\020\000\021\000\
\022\000\023\000\024\000\000\000\025\000\000\000\000\000\026\000\
\027\000\000\000\000\000\028\000\000\000\029\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\030\000\000\000\031\000\000\000\
\032\000\000\000\000\000\000\000\000\000\033\000\034\000\035\000\
\036\000\007\000\008\000\009\000\010\000\011\000\000\000\012\000\
\013\000\014\000\015\000\016\000\017\000\018\000\000\000\019\000\
\020\000\021\000\022\000\023\000\024\000\000\000\025\000\000\000\
\000\000\026\000\027\000\000\000\000\000\028\000\000\000\029\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\030\000\000\000\
\031\000\000\000\000\000\000\000\000\000\000\000\000\000\033\000\
\034\000\035\000\036\000\007\000\008\000\009\000\010\000\011\000\
\000\000\012\000\013\000\014\000\015\000\016\000\017\000\018\000\
\000\000\019\000\020\000\000\000\022\000\023\000\024\000\000\000\
\025\000\000\000\000\000\026\000\027\000\007\000\008\000\009\000\
\010\000\011\000\102\000\000\000\047\000\000\000\000\000\000\000\
\000\000\018\000\000\000\000\000\000\000\021\000\022\000\048\000\
\030\000\000\000\031\000\000\000\000\000\000\000\000\000\000\000\
\000\000\033\000\034\000\035\000\036\000\007\000\008\000\009\000\
\010\000\011\000\000\000\000\000\047\000\000\000\000\000\000\000\
\000\000\018\000\030\000\000\000\031\000\021\000\022\000\048\000\
\009\000\009\000\009\000\009\000\000\000\000\000\009\000\009\000\
\000\000\009\000\000\000\000\000\000\000\009\000\009\000\009\000\
\009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
\009\000\000\000\030\000\000\000\031\000\000\000\009\000\009\000\
\009\000\009\000\067\000\068\000\069\000\070\000\000\000\000\000\
\071\000\072\000\000\000\073\000\000\000\000\000\000\000\074\000\
\075\000\076\000\077\000\078\000\079\000\000\000\000\000\000\000\
\080\000\081\000\082\000\067\000\068\000\069\000\070\000\083\000\
\084\000\071\000\072\000\000\000\073\000\000\000\000\000\000\000\
\074\000\075\000\076\000\077\000\078\000\079\000\000\000\000\000\
\000\000\080\000\081\000\082\000\000\000\099\000\000\000\000\000\
\000\000\084\000\067\000\068\000\069\000\070\000\000\000\000\000\
\071\000\072\000\000\000\073\000\000\000\000\000\146\000\074\000\
\075\000\076\000\077\000\078\000\079\000\000\000\000\000\000\000\
\080\000\081\000\082\000\067\000\068\000\069\000\070\000\000\000\
\084\000\071\000\072\000\000\000\073\000\000\000\000\000\000\000\
\074\000\075\000\076\000\077\000\078\000\079\000\000\000\000\000\
\000\000\080\000\081\000\082\000\000\000\156\000\000\000\000\000\
\000\000\084\000\067\000\068\000\069\000\070\000\000\000\000\000\
\071\000\072\000\000\000\073\000\000\000\000\000\000\000\074\000\
\075\000\076\000\077\000\078\000\079\000\000\000\000\000\000\000\
\080\000\081\000\082\000\000\000\158\000\000\000\000\000\000\000\
\084\000\067\000\068\000\069\000\070\000\000\000\000\000\071\000\
\072\000\000\000\073\000\000\000\000\000\000\000\074\000\075\000\
\076\000\077\000\078\000\079\000\000\000\000\000\000\000\080\000\
\081\000\082\000\067\000\068\000\069\000\070\000\000\000\084\000\
\071\000\072\000\000\000\073\000\000\000\000\000\000\000\074\000\
\075\000\076\000\077\000\078\000\079\000\000\000\000\000\000\000\
\080\000\081\000\000\000\067\000\068\000\069\000\070\000\000\000\
\084\000\071\000\072\000\000\000\073\000\000\000\000\000\000\000\
\074\000\075\000\076\000\077\000\078\000\079\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\084\000"

let yycheck = "\030\000\
\000\000\014\001\021\001\022\001\023\001\024\001\021\001\022\001\
\027\001\028\001\001\000\030\001\027\001\040\001\005\001\021\000\
\022\000\001\001\024\000\025\000\026\000\027\000\028\000\029\000\
\030\000\052\001\040\001\054\001\007\001\008\001\064\001\065\001\
\051\001\018\000\006\001\000\000\051\001\051\001\001\001\052\001\
\040\001\054\001\041\001\042\001\051\001\049\001\031\000\031\000\
\034\001\055\000\052\001\053\001\054\001\052\001\053\001\054\001\
\087\000\042\000\042\000\047\001\000\000\067\000\068\000\069\000\
\070\000\071\000\072\000\073\000\074\000\075\000\076\000\077\000\
\078\000\079\000\080\000\081\000\082\000\062\000\063\000\064\000\
\065\000\065\000\061\001\062\001\063\001\052\001\001\001\054\001\
\046\001\060\001\096\000\051\001\098\000\007\001\008\001\009\001\
\010\001\011\001\012\001\130\000\054\001\015\001\016\001\134\000\
\089\000\019\001\046\001\092\000\092\000\000\000\095\000\001\001\
\002\001\003\001\004\001\005\001\002\001\000\000\008\001\005\001\
\000\000\083\000\008\001\013\001\045\000\045\000\255\255\017\001\
\018\001\019\001\255\255\017\001\018\001\019\001\255\255\255\255\
\255\255\255\255\255\255\145\000\146\000\255\255\255\255\255\255\
\255\255\255\255\255\255\132\000\255\255\155\000\040\001\255\255\
\255\255\255\255\139\000\140\000\046\001\255\255\048\001\255\255\
\046\001\255\255\048\001\255\255\255\255\255\255\255\255\001\001\
\002\001\003\001\004\001\005\001\255\255\007\001\008\001\009\001\
\010\001\011\001\012\001\013\001\000\000\015\001\016\001\017\001\
\018\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\255\255\255\255\
\034\001\035\001\036\001\037\001\038\001\039\001\255\255\255\255\
\255\255\043\001\044\001\045\001\046\001\255\255\048\001\255\255\
\255\255\051\001\255\255\255\255\255\255\055\001\056\001\057\001\
\058\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\021\001\022\001\023\001\024\001\255\255\255\255\027\001\028\001\
\000\000\030\001\255\255\032\001\255\255\034\001\035\001\036\001\
\037\001\038\001\039\001\255\255\255\255\255\255\043\001\044\001\
\045\001\001\001\002\001\003\001\004\001\005\001\051\001\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\043\001\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\051\001\052\001\053\001\054\001\055\001\
\056\001\057\001\058\001\000\000\060\001\001\001\002\001\003\001\
\004\001\005\001\255\255\007\001\008\001\009\001\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\043\001\
\044\001\045\001\046\001\047\001\048\001\049\001\050\001\051\001\
\052\001\053\001\054\001\055\001\056\001\057\001\058\001\000\000\
\060\001\001\001\002\001\003\001\004\001\005\001\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\043\001\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\255\255\052\001\053\001\054\001\055\001\
\056\001\057\001\058\001\000\000\060\001\001\001\002\001\003\001\
\004\001\005\001\255\255\007\001\008\001\009\001\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\255\255\035\001\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\043\001\
\044\001\045\001\046\001\047\001\048\001\049\001\050\001\051\001\
\052\001\053\001\054\001\055\001\056\001\057\001\058\001\000\000\
\060\001\001\001\002\001\003\001\004\001\005\001\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\043\001\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\255\255\052\001\053\001\054\001\055\001\
\056\001\057\001\058\001\000\000\060\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\001\001\002\001\003\001\004\001\
\005\001\255\255\007\001\008\001\009\001\010\001\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\042\001\043\001\044\001\
\045\001\046\001\047\001\048\001\049\001\050\001\000\000\052\001\
\053\001\054\001\055\001\056\001\057\001\058\001\255\255\060\001\
\001\001\002\001\003\001\004\001\005\001\255\255\007\001\008\001\
\009\001\010\001\011\001\012\001\013\001\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\033\001\034\001\035\001\036\001\037\001\038\001\039\001\040\001\
\041\001\042\001\043\001\044\001\045\001\046\001\047\001\048\001\
\049\001\050\001\000\000\052\001\053\001\054\001\055\001\056\001\
\057\001\058\001\255\255\060\001\001\001\002\001\003\001\004\001\
\005\001\255\255\007\001\008\001\009\001\010\001\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\042\001\043\001\044\001\
\045\001\046\001\047\001\048\001\049\001\050\001\051\001\052\001\
\053\001\000\000\055\001\056\001\057\001\058\001\255\255\060\001\
\001\001\002\001\003\001\004\001\005\001\255\255\007\001\008\001\
\009\001\010\001\011\001\012\001\013\001\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\033\001\034\001\035\001\036\001\037\001\038\001\039\001\040\001\
\041\001\042\001\043\001\044\001\045\001\046\001\047\001\048\001\
\049\001\050\001\255\255\052\001\053\001\054\001\055\001\056\001\
\057\001\058\001\000\000\060\001\001\001\002\001\003\001\004\001\
\005\001\255\255\007\001\008\001\009\001\010\001\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\042\001\043\001\044\001\
\045\001\046\001\047\001\048\001\049\001\050\001\051\001\052\001\
\053\001\255\255\055\001\056\001\057\001\058\001\000\000\060\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\001\001\
\002\001\003\001\004\001\005\001\255\255\007\001\008\001\009\001\
\010\001\011\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\043\001\044\001\045\001\046\001\047\001\048\001\049\001\
\050\001\051\001\052\001\053\001\000\000\055\001\056\001\057\001\
\058\001\255\255\060\001\001\001\002\001\003\001\004\001\005\001\
\255\255\007\001\008\001\009\001\010\001\011\001\012\001\013\001\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\043\001\044\001\045\001\
\046\001\047\001\048\001\049\001\050\001\051\001\255\255\053\001\
\000\000\055\001\056\001\057\001\058\001\255\255\060\001\255\255\
\255\255\255\255\001\001\002\001\003\001\004\001\005\001\255\255\
\007\001\008\001\009\001\010\001\011\001\012\001\013\001\014\001\
\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\041\001\042\001\043\001\044\001\045\001\046\001\
\047\001\048\001\049\001\050\001\051\001\000\000\053\001\255\255\
\055\001\056\001\057\001\058\001\255\255\060\001\255\255\255\255\
\255\255\255\255\255\255\001\001\002\001\003\001\004\001\005\001\
\255\255\007\001\008\001\009\001\010\001\011\001\012\001\013\001\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\043\001\044\001\045\001\
\046\001\047\001\048\001\049\001\050\001\051\001\000\000\053\001\
\255\255\055\001\056\001\057\001\058\001\255\255\060\001\001\001\
\002\001\003\001\004\001\005\001\255\255\007\001\008\001\009\001\
\010\001\011\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\043\001\044\001\045\001\046\001\047\001\048\001\049\001\
\050\001\051\001\000\000\053\001\255\255\055\001\056\001\057\001\
\058\001\255\255\060\001\255\255\255\255\001\001\002\001\003\001\
\004\001\005\001\255\255\007\001\008\001\009\001\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\043\001\
\044\001\045\001\046\001\047\001\048\001\049\001\050\001\051\001\
\000\000\255\255\255\255\055\001\056\001\057\001\058\001\255\255\
\060\001\001\001\002\001\003\001\004\001\005\001\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\255\255\041\001\042\001\043\001\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\051\001\000\000\053\001\255\255\055\001\
\056\001\057\001\058\001\255\255\060\001\255\255\001\001\002\001\
\003\001\004\001\005\001\255\255\007\001\008\001\009\001\010\001\
\011\001\012\001\013\001\014\001\015\001\016\001\017\001\018\001\
\019\001\020\001\255\255\255\255\023\001\024\001\025\001\026\001\
\255\255\028\001\029\001\030\001\031\001\032\001\033\001\034\001\
\035\001\036\001\037\001\038\001\039\001\040\001\041\001\042\001\
\043\001\044\001\045\001\046\001\047\001\048\001\049\001\050\001\
\000\000\052\001\053\001\054\001\055\001\056\001\057\001\058\001\
\255\255\060\001\255\255\255\255\255\255\255\255\255\255\001\001\
\002\001\003\001\004\001\005\001\255\255\007\001\008\001\009\001\
\010\001\011\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\255\255\255\255\023\001\024\001\025\001\
\026\001\255\255\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\043\001\044\001\045\001\046\001\047\001\048\001\049\001\
\050\001\000\000\052\001\053\001\054\001\055\001\056\001\057\001\
\058\001\255\255\060\001\001\001\002\001\003\001\004\001\005\001\
\255\255\007\001\008\001\009\001\010\001\011\001\012\001\013\001\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\255\255\
\255\255\023\001\024\001\025\001\026\001\255\255\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\043\001\044\001\045\001\
\046\001\047\001\048\001\049\001\050\001\000\000\052\001\053\001\
\054\001\055\001\056\001\057\001\058\001\255\255\060\001\255\255\
\255\255\001\001\002\001\003\001\004\001\005\001\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\255\255\255\255\023\001\
\024\001\025\001\026\001\255\255\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\043\001\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\000\000\052\001\053\001\054\001\055\001\
\056\001\057\001\058\001\255\255\060\001\001\001\002\001\003\001\
\004\001\005\001\255\255\007\001\008\001\009\001\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\255\255\255\255\023\001\024\001\025\001\026\001\255\255\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\043\001\
\044\001\045\001\046\001\047\001\048\001\049\001\050\001\000\000\
\052\001\053\001\054\001\055\001\056\001\057\001\058\001\255\255\
\060\001\001\001\002\001\003\001\004\001\005\001\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\255\255\255\255\023\001\
\024\001\025\001\026\001\255\255\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\043\001\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\000\000\052\001\053\001\054\001\055\001\
\056\001\057\001\058\001\255\255\060\001\255\255\255\255\255\255\
\255\255\255\255\001\001\002\001\003\001\004\001\005\001\255\255\
\007\001\008\001\009\001\010\001\011\001\012\001\013\001\014\001\
\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\033\001\034\001\035\001\036\001\037\001\038\001\
\039\001\040\001\255\255\255\255\043\001\044\001\045\001\046\001\
\047\001\048\001\049\001\050\001\051\001\000\000\255\255\255\255\
\055\001\056\001\057\001\058\001\255\255\060\001\001\001\002\001\
\003\001\004\001\005\001\255\255\007\001\008\001\009\001\010\001\
\011\001\012\001\013\001\014\001\015\001\016\001\017\001\018\001\
\019\001\020\001\255\255\255\255\255\255\255\255\025\001\026\001\
\255\255\255\255\029\001\255\255\031\001\032\001\033\001\034\001\
\035\001\036\001\037\001\038\001\039\001\040\001\041\001\042\001\
\043\001\044\001\045\001\046\001\047\001\048\001\049\001\050\001\
\255\255\052\001\053\001\054\001\055\001\056\001\057\001\058\001\
\000\000\060\001\255\255\255\255\001\001\002\001\003\001\004\001\
\005\001\255\255\007\001\008\001\009\001\010\001\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\255\255\255\255\255\255\255\255\025\001\026\001\255\255\255\255\
\029\001\255\255\031\001\032\001\033\001\034\001\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\042\001\043\001\044\001\
\045\001\046\001\047\001\048\001\049\001\050\001\255\255\052\001\
\053\001\054\001\055\001\056\001\057\001\058\001\000\000\060\001\
\001\001\002\001\003\001\004\001\005\001\255\255\007\001\008\001\
\009\001\010\001\011\001\012\001\013\001\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\255\255\255\255\255\255\255\255\
\025\001\026\001\255\255\255\255\029\001\255\255\031\001\032\001\
\033\001\034\001\035\001\036\001\037\001\038\001\039\001\040\001\
\041\001\042\001\043\001\044\001\045\001\046\001\047\001\048\001\
\049\001\050\001\255\255\052\001\053\001\054\001\055\001\056\001\
\057\001\058\001\000\000\060\001\001\001\002\001\003\001\004\001\
\005\001\255\255\007\001\008\001\009\001\010\001\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\255\255\255\255\255\255\255\255\025\001\026\001\255\255\255\255\
\029\001\255\255\031\001\032\001\033\001\034\001\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\042\001\043\001\044\001\
\045\001\046\001\047\001\048\001\049\001\050\001\255\255\052\001\
\053\001\054\001\055\001\056\001\057\001\058\001\000\000\060\001\
\255\255\255\255\255\255\255\255\255\255\255\255\001\001\002\001\
\003\001\004\001\005\001\255\255\007\001\008\001\009\001\010\001\
\011\001\012\001\013\001\014\001\015\001\016\001\017\001\018\001\
\019\001\020\001\255\255\255\255\255\255\255\255\025\001\026\001\
\255\255\255\255\029\001\255\255\031\001\032\001\033\001\034\001\
\035\001\036\001\037\001\038\001\039\001\040\001\041\001\042\001\
\043\001\044\001\045\001\046\001\047\001\048\001\049\001\050\001\
\255\255\052\001\053\001\054\001\055\001\056\001\057\001\058\001\
\000\000\060\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\001\001\002\001\003\001\004\001\005\001\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\255\255\255\255\255\255\
\255\255\025\001\026\001\255\255\255\255\029\001\255\255\031\001\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\043\001\044\001\045\001\046\001\047\001\
\048\001\049\001\050\001\255\255\052\001\053\001\054\001\055\001\
\056\001\057\001\058\001\000\000\060\001\255\255\255\255\001\001\
\002\001\003\001\004\001\005\001\255\255\007\001\008\001\009\001\
\010\001\011\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\255\255\255\255\255\255\255\255\025\001\
\026\001\255\255\255\255\029\001\255\255\031\001\032\001\033\001\
\034\001\035\001\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\043\001\044\001\045\001\046\001\047\001\048\001\049\001\
\050\001\255\255\052\001\053\001\054\001\055\001\056\001\057\001\
\058\001\000\000\060\001\001\001\002\001\003\001\004\001\005\001\
\255\255\007\001\008\001\009\001\010\001\011\001\012\001\013\001\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\255\255\
\255\255\255\255\255\255\025\001\026\001\255\255\255\255\029\001\
\255\255\031\001\032\001\033\001\255\255\255\255\255\255\255\255\
\255\255\255\255\040\001\041\001\042\001\043\001\044\001\045\001\
\046\001\047\001\048\001\049\001\050\001\000\000\052\001\053\001\
\054\001\055\001\056\001\057\001\058\001\255\255\060\001\001\001\
\002\001\003\001\004\001\005\001\255\255\007\001\008\001\009\001\
\010\001\011\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\255\255\255\255\255\255\255\255\025\001\
\026\001\255\255\255\255\029\001\255\255\031\001\032\001\033\001\
\000\000\255\255\255\255\255\255\255\255\255\255\040\001\041\001\
\042\001\043\001\044\001\045\001\046\001\047\001\048\001\049\001\
\050\001\255\255\052\001\053\001\054\001\055\001\056\001\057\001\
\058\001\255\255\060\001\255\255\255\255\255\255\255\255\255\255\
\255\255\001\001\002\001\003\001\004\001\005\001\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\255\255\000\000\255\255\
\255\255\025\001\026\001\255\255\255\255\029\001\255\255\031\001\
\032\001\033\001\255\255\255\255\255\255\255\255\255\255\255\255\
\040\001\041\001\042\001\255\255\255\255\045\001\046\001\047\001\
\048\001\049\001\050\001\255\255\052\001\053\001\054\001\055\001\
\056\001\057\001\058\001\255\255\060\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\001\001\002\001\003\001\004\001\
\005\001\255\255\007\001\008\001\009\001\010\001\011\001\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\255\255\255\255\255\255\255\255\025\001\026\001\255\255\255\255\
\029\001\255\255\031\001\032\001\033\001\255\255\255\255\255\255\
\255\255\255\255\255\255\040\001\041\001\042\001\255\255\255\255\
\255\255\046\001\047\001\048\001\049\001\050\001\255\255\052\001\
\053\001\054\001\055\001\056\001\057\001\058\001\255\255\060\001\
\255\255\255\255\001\001\002\001\003\001\004\001\005\001\255\255\
\007\001\008\001\009\001\010\001\011\001\012\001\013\001\014\001\
\015\001\016\001\017\001\018\001\019\001\020\001\255\255\255\255\
\255\255\255\255\025\001\026\001\255\255\255\255\029\001\255\255\
\031\001\032\001\033\001\255\255\255\255\255\255\255\255\255\255\
\255\255\040\001\041\001\042\001\255\255\255\255\255\255\046\001\
\047\001\048\001\049\001\050\001\255\255\052\001\053\001\054\001\
\055\001\056\001\057\001\058\001\255\255\060\001\255\255\255\255\
\255\255\255\255\255\255\014\001\255\255\255\255\017\001\255\255\
\255\255\255\255\021\001\255\255\023\001\024\001\255\255\255\255\
\027\001\028\001\029\001\030\001\031\001\032\001\033\001\034\001\
\035\001\036\001\037\001\038\001\039\001\040\001\041\001\042\001\
\043\001\044\001\045\001\255\255\047\001\255\255\049\001\050\001\
\051\001\052\001\053\001\054\001\255\255\255\255\014\001\255\255\
\255\255\060\001\255\255\255\255\255\255\021\001\255\255\023\001\
\024\001\255\255\255\255\027\001\028\001\255\255\030\001\255\255\
\032\001\033\001\034\001\035\001\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\043\001\044\001\045\001\255\255\047\001\
\255\255\049\001\050\001\051\001\052\001\053\001\054\001\001\001\
\002\001\003\001\004\001\005\001\060\001\007\001\008\001\009\001\
\010\001\011\001\012\001\013\001\255\255\015\001\016\001\017\001\
\018\001\019\001\020\001\255\255\022\001\255\255\255\255\025\001\
\026\001\255\255\255\255\029\001\255\255\031\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\046\001\255\255\048\001\255\255\
\050\001\255\255\255\255\255\255\255\255\055\001\056\001\057\001\
\058\001\001\001\002\001\003\001\004\001\005\001\255\255\007\001\
\008\001\009\001\010\001\011\001\012\001\013\001\255\255\015\001\
\016\001\017\001\018\001\019\001\020\001\255\255\022\001\255\255\
\255\255\025\001\026\001\255\255\255\255\029\001\255\255\031\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\046\001\255\255\
\048\001\255\255\255\255\255\255\255\255\255\255\255\255\055\001\
\056\001\057\001\058\001\001\001\002\001\003\001\004\001\005\001\
\255\255\007\001\008\001\009\001\010\001\011\001\012\001\013\001\
\255\255\015\001\016\001\255\255\018\001\019\001\020\001\255\255\
\022\001\255\255\255\255\025\001\026\001\001\001\002\001\003\001\
\004\001\005\001\006\001\255\255\008\001\255\255\255\255\255\255\
\255\255\013\001\255\255\255\255\255\255\017\001\018\001\019\001\
\046\001\255\255\048\001\255\255\255\255\255\255\255\255\255\255\
\255\255\055\001\056\001\057\001\058\001\001\001\002\001\003\001\
\004\001\005\001\255\255\255\255\008\001\255\255\255\255\255\255\
\255\255\013\001\046\001\255\255\048\001\017\001\018\001\019\001\
\021\001\022\001\023\001\024\001\255\255\255\255\027\001\028\001\
\255\255\030\001\255\255\255\255\255\255\034\001\035\001\036\001\
\037\001\038\001\039\001\040\001\041\001\042\001\043\001\044\001\
\045\001\255\255\046\001\255\255\048\001\255\255\051\001\052\001\
\053\001\054\001\021\001\022\001\023\001\024\001\255\255\255\255\
\027\001\028\001\255\255\030\001\255\255\255\255\255\255\034\001\
\035\001\036\001\037\001\038\001\039\001\255\255\255\255\255\255\
\043\001\044\001\045\001\021\001\022\001\023\001\024\001\050\001\
\051\001\027\001\028\001\255\255\030\001\255\255\255\255\255\255\
\034\001\035\001\036\001\037\001\038\001\039\001\255\255\255\255\
\255\255\043\001\044\001\045\001\255\255\047\001\255\255\255\255\
\255\255\051\001\021\001\022\001\023\001\024\001\255\255\255\255\
\027\001\028\001\255\255\030\001\255\255\255\255\033\001\034\001\
\035\001\036\001\037\001\038\001\039\001\255\255\255\255\255\255\
\043\001\044\001\045\001\021\001\022\001\023\001\024\001\255\255\
\051\001\027\001\028\001\255\255\030\001\255\255\255\255\255\255\
\034\001\035\001\036\001\037\001\038\001\039\001\255\255\255\255\
\255\255\043\001\044\001\045\001\255\255\047\001\255\255\255\255\
\255\255\051\001\021\001\022\001\023\001\024\001\255\255\255\255\
\027\001\028\001\255\255\030\001\255\255\255\255\255\255\034\001\
\035\001\036\001\037\001\038\001\039\001\255\255\255\255\255\255\
\043\001\044\001\045\001\255\255\047\001\255\255\255\255\255\255\
\051\001\021\001\022\001\023\001\024\001\255\255\255\255\027\001\
\028\001\255\255\030\001\255\255\255\255\255\255\034\001\035\001\
\036\001\037\001\038\001\039\001\255\255\255\255\255\255\043\001\
\044\001\045\001\021\001\022\001\023\001\024\001\255\255\051\001\
\027\001\028\001\255\255\030\001\255\255\255\255\255\255\034\001\
\035\001\036\001\037\001\038\001\039\001\255\255\255\255\255\255\
\043\001\044\001\255\255\021\001\022\001\023\001\024\001\255\255\
\051\001\027\001\028\001\255\255\030\001\255\255\255\255\255\255\
\034\001\035\001\036\001\037\001\038\001\039\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\051\001"

let yynames_const = "\
  TRUE\000\
  FALSE\000\
  GRID\000\
  CROSS\000\
  CELL\000\
  REGION\000\
  CENTRELINE\000\
  EDGELINE\000\
  CENTRELOOP\000\
  EDGELOOP\000\
  R\000\
  C\000\
  INTDEC\000\
  BOOLDEC\000\
  ROW\000\
  COLUMN\000\
  BOX\000\
  CELLDEC\000\
  ADD\000\
  SUB\000\
  MUL\000\
  DIV\000\
  ABS\000\
  DIFF\000\
  AND\000\
  OR\000\
  NOT\000\
  XOR\000\
  IF\000\
  THEN\000\
  ELSE\000\
  EQUAL\000\
  LT\000\
  GT\000\
  LTE\000\
  GTE\000\
  UNEQUAL\000\
  MEMBER\000\
  ADJACENT\000\
  DIAGADJACENT\000\
  LEFTIMP\000\
  RIGHTIMP\000\
  BIIMP\000\
  LBRACK\000\
  RBRACK\000\
  LSBRACK\000\
  RSBRACK\000\
  SEMICOLON\000\
  POINT\000\
  TO\000\
  COMMA\000\
  HALF\000\
  FORALL\000\
  EXISTS\000\
  NFORALL\000\
  NEXISTS\000\
  IN\000\
  ARE\000\
  SIZE\000\
  LENGTH\000\
  SUM\000\
  DISTINCT\000\
  EQUIVALENT\000\
  EOF\000\
  HIGH\000\
  LOW\000\
  "

let yynames_block = "\
  INT\000\
  VAR\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'init) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    Obj.repr(
# 47 "parser.mly"
                                            ((_1, _2))
# 1100 "parser.ml"
               : ((Lexing.position * int * int) * Past.expr list)))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'init) in
    Obj.repr(
# 48 "parser.mly"
                                            ((_1, []))
# 1107 "parser.ml"
               : ((Lexing.position * int * int) * Past.expr list)))
; (fun __caml_parser_env ->
    Obj.repr(
# 51 "parser.mly"
                                            (Past.Boolean(location(), true))
# 1113 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 52 "parser.mly"
                                            (Past.Boolean(location(), false))
# 1119 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 53 "parser.mly"
                                            (Past.Integer(location(), _1))
# 1126 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 54 "parser.mly"
                                            (Past.Var(location(), _1))
# 1133 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 55 "parser.mly"
                                                                    (Past.RC(location(), _2, _4))
# 1141 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 56 "parser.mly"
                                                     (Past.Range(location(), _1, _3))
# 1149 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'group) in
    Obj.repr(
# 57 "parser.mly"
                                            (Past.Group(location(), _1))
# 1156 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 58 "parser.mly"
                                            (Past.Corner(location(), _1))
# 1163 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 59 "parser.mly"
                                            (_2)
# 1170 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 62 "parser.mly"
                                            (Past.Int)
# 1176 "parser.ml"
               : 'datatype))
; (fun __caml_parser_env ->
    Obj.repr(
# 63 "parser.mly"
                                            (Past.Bool)
# 1182 "parser.ml"
               : 'datatype))
; (fun __caml_parser_env ->
    Obj.repr(
# 64 "parser.mly"
                                            (Past.Cell)
# 1188 "parser.ml"
               : 'datatype))
; (fun __caml_parser_env ->
    Obj.repr(
# 65 "parser.mly"
                                            (Past.Region)
# 1194 "parser.ml"
               : 'datatype))
; (fun __caml_parser_env ->
    Obj.repr(
# 66 "parser.mly"
                                            (Past.CentreLine)
# 1200 "parser.ml"
               : 'datatype))
; (fun __caml_parser_env ->
    Obj.repr(
# 67 "parser.mly"
                                            (Past.EdgeLine)
# 1206 "parser.ml"
               : 'datatype))
; (fun __caml_parser_env ->
    Obj.repr(
# 68 "parser.mly"
                                            (Past.CentreLoop)
# 1212 "parser.ml"
               : 'datatype))
; (fun __caml_parser_env ->
    Obj.repr(
# 69 "parser.mly"
                                            (Past.EdgeLoop)
# 1218 "parser.ml"
               : 'datatype))
; (fun __caml_parser_env ->
    Obj.repr(
# 70 "parser.mly"
                                            (Past.Box)
# 1224 "parser.ml"
               : 'datatype))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : 'datatype) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'list) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 73 "parser.mly"
                                            (Past.Dec(location(), _1, Past.List(location(), _2), Some(_4)))
# 1233 "parser.ml"
               : 'dec))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'datatype) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'list) in
    Obj.repr(
# 74 "parser.mly"
                                            (Past.Dec(location(), _1, Past.List(location(), _2), None))
# 1241 "parser.ml"
               : 'dec))
; (fun __caml_parser_env ->
    Obj.repr(
# 77 "parser.mly"
                                            (Past.Grid)
# 1247 "parser.ml"
               : 'group))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'list) in
    Obj.repr(
# 78 "parser.mly"
                                            (Past.Instance(Past.List(location(), _2)))
# 1254 "parser.ml"
               : 'group))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 79 "parser.mly"
                                            (Past.Instance(Past.Var(location(), _1)))
# 1261 "parser.ml"
               : 'group))
; (fun __caml_parser_env ->
    Obj.repr(
# 80 "parser.mly"
                                            (Past.Row(None))
# 1267 "parser.ml"
               : 'group))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 81 "parser.mly"
                                            (Past.Row(Some _2))
# 1274 "parser.ml"
               : 'group))
; (fun __caml_parser_env ->
    Obj.repr(
# 82 "parser.mly"
                                            (Past.Column(None))
# 1280 "parser.ml"
               : 'group))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 83 "parser.mly"
                                            (Past.Column(Some _2))
# 1287 "parser.ml"
               : 'group))
; (fun __caml_parser_env ->
    Obj.repr(
# 84 "parser.mly"
                                            (Past.Boxes(None))
# 1293 "parser.ml"
               : 'group))
; (fun __caml_parser_env ->
    Obj.repr(
# 85 "parser.mly"
                                            (Past.Regions)
# 1299 "parser.ml"
               : 'group))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'group) in
    Obj.repr(
# 86 "parser.mly"
                                            (_2)
# 1306 "parser.ml"
               : 'group))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 89 "parser.mly"
                                            ([_1])
# 1313 "parser.ml"
               : 'list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'list) in
    Obj.repr(
# 90 "parser.mly"
                                            (_1::_3)
# 1321 "parser.ml"
               : 'list))
; (fun __caml_parser_env ->
    Obj.repr(
# 93 "parser.mly"
                                            (Past.Cells)
# 1327 "parser.ml"
               : 'utils))
; (fun __caml_parser_env ->
    Obj.repr(
# 94 "parser.mly"
                                            (Past.Size)
# 1333 "parser.ml"
               : 'utils))
; (fun __caml_parser_env ->
    Obj.repr(
# 95 "parser.mly"
                                            (Past.Length)
# 1339 "parser.ml"
               : 'utils))
; (fun __caml_parser_env ->
    Obj.repr(
# 96 "parser.mly"
                                            (Past.Reg)
# 1345 "parser.ml"
               : 'utils))
; (fun __caml_parser_env ->
    Obj.repr(
# 97 "parser.mly"
                                            (Past.Sum)
# 1351 "parser.ml"
               : 'utils))
; (fun __caml_parser_env ->
    Obj.repr(
# 100 "parser.mly"
                                            (Past.ForAll)
# 1357 "parser.ml"
               : 'quantifier))
; (fun __caml_parser_env ->
    Obj.repr(
# 101 "parser.mly"
                                            (Past.Exists)
# 1363 "parser.ml"
               : 'quantifier))
; (fun __caml_parser_env ->
    Obj.repr(
# 102 "parser.mly"
                                            (Past.NForAll)
# 1369 "parser.ml"
               : 'quantifier))
; (fun __caml_parser_env ->
    Obj.repr(
# 103 "parser.mly"
                                            (Past.NExists)
# 1375 "parser.ml"
               : 'quantifier))
; (fun __caml_parser_env ->
    Obj.repr(
# 106 "parser.mly"
                                            (Past.Distinct)
# 1381 "parser.ml"
               : 'constraints))
; (fun __caml_parser_env ->
    Obj.repr(
# 107 "parser.mly"
                                            (Past.Equivalent)
# 1387 "parser.ml"
               : 'constraints))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 110 "parser.mly"
                                            (_1)
# 1394 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'dec) in
    Obj.repr(
# 111 "parser.mly"
                                            (_1)
# 1401 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 112 "parser.mly"
                                            (Past.Op(location(), _1, Past.Add, _3))
# 1409 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 113 "parser.mly"
                                            (Past.Op(location(), _1, Past.Sub, _3))
# 1417 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 114 "parser.mly"
                                            (Past.Op(location(), _1, Past.Mul, _3))
# 1425 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 115 "parser.mly"
                                            (Past.Op(location(), _1, Past.Div, _3))
# 1433 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 116 "parser.mly"
                                            (Past.UnaryOp(location(), Past.Abs, _2))
# 1440 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 117 "parser.mly"
                                            (Past.UnaryOp(location(), Past.Neg, _2))
# 1447 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 118 "parser.mly"
                                            (Past.UnaryOp(location(), Past.Abs, Past.Op(location(), _2, Past.Sub, _3)))
# 1455 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 119 "parser.mly"
                                            (Past.Op(location(), _1, Past.And, _3))
# 1463 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 120 "parser.mly"
                                            (Past.Op(location(), _1, Past.Or, _3))
# 1471 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 121 "parser.mly"
                                            (Past.Op(location(), _1, Past.Xor, _3))
# 1479 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : Past.expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 122 "parser.mly"
                                            (Past.ITE(location(), _2, _4, _6))
# 1488 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 123 "parser.mly"
                                            (Past.UnaryOp(location(), Past.Not, _2))
# 1495 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 124 "parser.mly"
                                            (Past.Op(location(), _1, Past.Equal, _3))
# 1503 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 125 "parser.mly"
                                            (Past.Op(location(), _1, Past.LT, _3))
# 1511 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 126 "parser.mly"
                                            (Past.Op(location(), _1, Past.GT, _3))
# 1519 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 127 "parser.mly"
                                            (Past.Op(location(), _1, Past.LTE, _3))
# 1527 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 128 "parser.mly"
                                            (Past.Op(location(), _1, Past.GTE, _3))
# 1535 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 129 "parser.mly"
                                            (Past.Op(location(), _1, Past.Unequal, _3))
# 1543 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 130 "parser.mly"
                                            (Past.Op(location(), _1, Past.LeftImp, _3))
# 1551 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 131 "parser.mly"
                                            (Past.Op(location(), _1, Past.RightImp, _3))
# 1559 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 132 "parser.mly"
                                            (Past.Op(location(), _1, Past.BiImp, _3))
# 1567 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'utils) in
    Obj.repr(
# 133 "parser.mly"
                                            (Past.Utils(location(), _1, _2))
# 1575 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 135 "parser.mly"
                                            (Past.SpecOp(location(), _1, Past.Adjacent(Some _5), _3))
# 1584 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 136 "parser.mly"
                                                     (Past.SpecOp(location(), _1, Past.Adjacent(None), _3))
# 1592 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 137 "parser.mly"
                                            (Past.SpecOp(location(), _1, Past.DiagAdjacent, _3))
# 1600 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : Past.expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : int) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 138 "parser.mly"
                                                          (Past.SpecOp(location(), _1, Past.CellLineAdjacent(_4), _5))
# 1609 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 7 : 'quantifier) in
    let _2 = (Parsing.peek_val __caml_parser_env 6 : 'dec) in
    let _4 = (Parsing.peek_val __caml_parser_env 4 : 'group) in
    let _7 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 140 "parser.mly"
                                            (Past.Quantifier(location(), _1, _2, _4, _7))
# 1619 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : 'quantifier) in
    let _2 = (Parsing.peek_val __caml_parser_env 4 : 'dec) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 142 "parser.mly"
                                            (Past.Quantifier(location(), _1, _2, Past.Grid, _5))
# 1628 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'list) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 143 "parser.mly"
                                            (Past.Member(location(), Past.List(location(), _1), _3))
# 1636 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : 'datatype) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'group) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'constraints) in
    Obj.repr(
# 144 "parser.mly"
                                            (Past.Sugar(location(), _1, Past.Group(location(), _3), _5))
# 1645 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 145 "parser.mly"
                                            (Past.CellDec(location(), _2))
# 1652 "parser.ml"
               : Past.expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : int) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 150 "parser.mly"
                                            ((location(), _2, _4))
# 1660 "parser.ml"
               : 'init))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'init) in
    Obj.repr(
# 151 "parser.mly"
                                            (_1)
# 1667 "parser.ml"
               : 'init))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : Past.expr) in
    Obj.repr(
# 154 "parser.mly"
                                            ([_1])
# 1674 "parser.ml"
               : 'expr_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : Past.expr) in
    Obj.repr(
# 155 "parser.mly"
                                            ([_1])
# 1681 "parser.ml"
               : 'expr_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : Past.expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr_list) in
    Obj.repr(
# 156 "parser.mly"
                                            (_1::_3)
# 1689 "parser.ml"
               : 'expr_list))
(* Entry main *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let main (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : ((Lexing.position * int * int) * Past.expr list))
