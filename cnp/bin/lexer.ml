# 3 "lexer.mll"
 
  open Parser
  open Lexing 

let next_line lexbuf =
  let pos = lexbuf.lex_curr_p in
  lexbuf.lex_curr_p <-
    { pos with pos_bol = lexbuf.lex_curr_pos;
               pos_lnum = pos.pos_lnum + 1
    }


# 15 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\178\255\179\255\180\255\001\000\084\000\094\000\014\000\
    \020\000\025\000\047\000\005\000\202\255\203\255\204\255\205\255\
    \206\255\207\255\011\000\002\000\029\000\216\255\016\000\043\000\
    \057\000\051\000\060\000\227\255\228\255\002\000\230\255\017\000\
    \057\000\107\000\055\000\060\000\018\000\016\000\255\255\026\000\
    \063\000\254\255\055\000\220\255\053\000\070\000\070\000\065\000\
    \067\000\063\000\247\255\065\000\235\255\100\000\101\000\094\000\
    \104\000\098\000\002\000\008\000\103\000\106\000\101\000\121\000\
    \114\000\111\000\003\000\009\000\117\000\120\000\119\000\109\000\
    \111\000\183\255\114\000\128\000\122\000\126\000\121\000\123\000\
    \133\000\120\000\245\255\124\000\123\000\241\255\122\000\131\000\
    \131\000\127\000\233\255\126\000\139\000\130\000\143\000\146\000\
    \140\000\144\000\139\000\141\000\151\000\138\000\243\255\142\000\
    \142\000\239\255\157\000\217\255\144\000\144\000\146\000\200\255\
    \165\000\155\000\186\255\219\255\148\000\238\255\154\000\165\000\
    \159\000\237\255\153\000\231\255\210\255\168\000\164\000\171\000\
    \157\000\226\255\223\255\194\255\189\255\192\255\172\000\158\000\
    \175\000\225\255\167\000\218\255\164\000\171\000\165\000\180\000\
    \224\255\185\000\175\000\176\000\201\255\191\255\222\255\169\000\
    \221\255\024\000\213\255\208\255\212\255\166\000\176\000\211\255\
    \174\000\192\000\182\000\183\000\199\255\187\000\178\000\178\000\
    \180\000\198\255\184\255\187\000\175\000\197\000\196\255\193\255\
    \189\000\197\000\185\000\198\000\195\255\201\000\202\000\189\000\
    \201\000\197\000\209\000\193\000\188\255\185\255\205\000\198\000\
    \195\000\212\000\187\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\075\000\074\000\073\000\077\000\
    \077\000\077\000\077\000\058\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\077\000\041\000\040\000\255\255\077\000\077\000\
    \077\000\077\000\077\000\255\255\255\255\026\000\255\255\077\000\
    \077\000\077\000\004\000\003\000\002\000\077\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\007\000\255\255\019\000\255\255\255\255\255\255\255\255\
    \255\255\005\000\006\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\009\000\255\255\255\255\013\000\255\255\255\255\255\255\
    \255\255\021\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\011\000\255\255\255\255\
    \015\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\065\000\255\255\255\255\023\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\046\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\000\000\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\000\000\255\255\000\000\255\255\255\255\255\255\000\000\
    \255\255\255\255\000\000\000\000\255\255\000\000\255\255\255\255\
    \255\255\000\000\255\255\000\000\000\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \255\255\000\000\255\255\000\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\000\000\000\000\000\000\255\255\
    \000\000\255\255\000\000\000\000\000\000\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\000\000\000\000\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\255\255\255\255\
    \255\255\255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\038\000\004\000\000\000\000\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \038\000\018\000\059\000\067\000\000\000\000\000\000\000\000\000\
    \017\000\016\000\028\000\030\000\012\000\029\000\011\000\027\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\170\000\013\000\020\000\021\000\019\000\156\000\
    \124\000\026\000\031\000\034\000\008\000\033\000\024\000\037\000\
    \159\000\032\000\153\000\060\000\009\000\068\000\022\000\023\000\
    \157\000\158\000\035\000\010\000\025\000\007\000\155\000\000\000\
    \036\000\000\000\154\000\015\000\000\000\014\000\000\000\000\000\
    \000\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\190\000\181\000\176\000\151\000\
    \118\000\042\000\039\000\040\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \172\000\149\000\141\000\134\000\054\000\150\000\128\000\115\000\
    \126\000\045\000\133\000\041\000\171\000\135\000\053\000\116\000\
    \140\000\043\000\127\000\044\000\051\000\046\000\125\000\047\000\
    \048\000\049\000\050\000\005\000\052\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\094\000\
    \086\000\056\000\074\000\055\000\057\000\058\000\061\000\093\000\
    \062\000\063\000\064\000\065\000\091\000\066\000\069\000\070\000\
    \071\000\072\000\073\000\092\000\075\000\076\000\077\000\079\000\
    \083\000\080\000\081\000\082\000\084\000\078\000\085\000\087\000\
    \088\000\089\000\090\000\112\000\108\000\106\000\095\000\096\000\
    \097\000\099\000\103\000\100\000\101\000\102\000\104\000\098\000\
    \002\000\105\000\107\000\109\000\110\000\111\000\113\000\114\000\
    \117\000\120\000\122\000\121\000\123\000\132\000\131\000\130\000\
    \129\000\138\000\119\000\136\000\137\000\139\000\145\000\142\000\
    \143\000\144\000\146\000\147\000\148\000\152\000\165\000\160\000\
    \161\000\162\000\163\000\164\000\166\000\167\000\168\000\169\000\
    \175\000\173\000\174\000\177\000\178\000\179\000\180\000\182\000\
    \189\000\184\000\185\000\186\000\187\000\188\000\191\000\192\000\
    \193\000\194\000\000\000\000\000\183\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\004\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\058\000\066\000\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\011\000\000\000\000\000\000\000\000\000\019\000\
    \029\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \018\000\000\000\020\000\059\000\000\000\067\000\000\000\000\000\
    \018\000\018\000\000\000\000\000\000\000\000\000\153\000\255\255\
    \000\000\255\255\020\000\000\000\255\255\000\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\005\000\007\000\008\000\009\000\022\000\
    \031\000\036\000\037\000\039\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \010\000\023\000\024\000\025\000\034\000\023\000\026\000\032\000\
    \026\000\035\000\025\000\040\000\010\000\025\000\034\000\032\000\
    \024\000\042\000\026\000\035\000\044\000\045\000\026\000\046\000\
    \047\000\048\000\049\000\005\000\051\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\033\000\
    \053\000\054\000\055\000\054\000\056\000\057\000\060\000\033\000\
    \061\000\062\000\063\000\064\000\033\000\065\000\068\000\069\000\
    \070\000\071\000\072\000\033\000\074\000\075\000\076\000\077\000\
    \078\000\079\000\080\000\081\000\083\000\077\000\084\000\086\000\
    \087\000\088\000\089\000\091\000\092\000\093\000\094\000\095\000\
    \096\000\097\000\098\000\099\000\100\000\101\000\103\000\097\000\
    \000\000\104\000\106\000\108\000\109\000\110\000\112\000\113\000\
    \116\000\118\000\119\000\120\000\122\000\125\000\126\000\127\000\
    \128\000\134\000\118\000\135\000\136\000\138\000\140\000\141\000\
    \142\000\143\000\145\000\146\000\147\000\151\000\157\000\158\000\
    \160\000\161\000\162\000\163\000\165\000\166\000\167\000\168\000\
    \171\000\172\000\173\000\176\000\177\000\178\000\179\000\181\000\
    \182\000\183\000\184\000\185\000\186\000\187\000\190\000\191\000\
    \192\000\193\000\255\255\255\255\181\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 22 "lexer.mll"
                      (token lexbuf)
# 236 "lexer.ml"

  | 1 ->
# 23 "lexer.mll"
                      (GRID)
# 241 "lexer.ml"

  | 2 ->
# 24 "lexer.mll"
                      (CROSS)
# 246 "lexer.ml"

  | 3 ->
# 25 "lexer.mll"
                      (R)
# 251 "lexer.ml"

  | 4 ->
# 26 "lexer.mll"
                      (C)
# 256 "lexer.ml"

  | 5 ->
# 27 "lexer.mll"
                      (CELL)
# 261 "lexer.ml"

  | 6 ->
# 28 "lexer.mll"
                      (CELL)
# 266 "lexer.ml"

  | 7 ->
# 29 "lexer.mll"
                      (REGION)
# 271 "lexer.ml"

  | 8 ->
# 30 "lexer.mll"
                      (REGION)
# 276 "lexer.ml"

  | 9 ->
# 31 "lexer.mll"
                      (CENTRELINE)
# 281 "lexer.ml"

  | 10 ->
# 32 "lexer.mll"
                      (CENTRELINE)
# 286 "lexer.ml"

  | 11 ->
# 33 "lexer.mll"
                      (EDGELINE)
# 291 "lexer.ml"

  | 12 ->
# 34 "lexer.mll"
                      (EDGELINE)
# 296 "lexer.ml"

  | 13 ->
# 35 "lexer.mll"
                      (CENTRELOOP)
# 301 "lexer.ml"

  | 14 ->
# 36 "lexer.mll"
                      (CENTRELOOP)
# 306 "lexer.ml"

  | 15 ->
# 37 "lexer.mll"
                      (EDGELOOP)
# 311 "lexer.ml"

  | 16 ->
# 38 "lexer.mll"
                      (EDGELOOP)
# 316 "lexer.ml"

  | 17 ->
# 39 "lexer.mll"
                      (INTDEC)
# 321 "lexer.ml"

  | 18 ->
# 40 "lexer.mll"
                      (BOOLDEC)
# 326 "lexer.ml"

  | 19 ->
# 41 "lexer.mll"
                      (ROW)
# 331 "lexer.ml"

  | 20 ->
# 42 "lexer.mll"
                      (ROW)
# 336 "lexer.ml"

  | 21 ->
# 43 "lexer.mll"
                      (COLUMN)
# 341 "lexer.ml"

  | 22 ->
# 44 "lexer.mll"
                      (COLUMN)
# 346 "lexer.ml"

  | 23 ->
# 45 "lexer.mll"
                      (BOX)
# 351 "lexer.ml"

  | 24 ->
# 46 "lexer.mll"
                      (BOX)
# 356 "lexer.ml"

  | 25 ->
# 47 "lexer.mll"
                      (ADD)
# 361 "lexer.ml"

  | 26 ->
# 48 "lexer.mll"
                      (SUB)
# 366 "lexer.ml"

  | 27 ->
# 49 "lexer.mll"
                      (MUL)
# 371 "lexer.ml"

  | 28 ->
# 50 "lexer.mll"
                      (DIV)
# 376 "lexer.ml"

  | 29 ->
# 51 "lexer.mll"
                      (ABS)
# 381 "lexer.ml"

  | 30 ->
# 52 "lexer.mll"
                      (TRUE)
# 386 "lexer.ml"

  | 31 ->
# 53 "lexer.mll"
                      (FALSE)
# 391 "lexer.ml"

  | 32 ->
# 54 "lexer.mll"
                      (AND)
# 396 "lexer.ml"

  | 33 ->
# 55 "lexer.mll"
                      (OR)
# 401 "lexer.ml"

  | 34 ->
# 56 "lexer.mll"
                      (NOT)
# 406 "lexer.ml"

  | 35 ->
# 57 "lexer.mll"
                      (XOR)
# 411 "lexer.ml"

  | 36 ->
# 58 "lexer.mll"
                      (IF)
# 416 "lexer.ml"

  | 37 ->
# 59 "lexer.mll"
                      (THEN)
# 421 "lexer.ml"

  | 38 ->
# 60 "lexer.mll"
                      (ELSE)
# 426 "lexer.ml"

  | 39 ->
# 61 "lexer.mll"
                      (EQUAL)
# 431 "lexer.ml"

  | 40 ->
# 62 "lexer.mll"
                      (LT)
# 436 "lexer.ml"

  | 41 ->
# 63 "lexer.mll"
                      (GT)
# 441 "lexer.ml"

  | 42 ->
# 64 "lexer.mll"
                      (LTE)
# 446 "lexer.ml"

  | 43 ->
# 65 "lexer.mll"
                      (GTE)
# 451 "lexer.ml"

  | 44 ->
# 66 "lexer.mll"
                      (UNEQUAL)
# 456 "lexer.ml"

  | 45 ->
# 67 "lexer.mll"
                      (LEFTIMP)
# 461 "lexer.ml"

  | 46 ->
# 68 "lexer.mll"
                      (RIGHTIMP)
# 466 "lexer.ml"

  | 47 ->
# 69 "lexer.mll"
                      (BIIMP)
# 471 "lexer.ml"

  | 48 ->
# 70 "lexer.mll"
                      (LBRACK)
# 476 "lexer.ml"

  | 49 ->
# 71 "lexer.mll"
                      (RBRACK)
# 481 "lexer.ml"

  | 50 ->
# 72 "lexer.mll"
                      (LSBRACK)
# 486 "lexer.ml"

  | 51 ->
# 73 "lexer.mll"
                      (RSBRACK)
# 491 "lexer.ml"

  | 52 ->
# 74 "lexer.mll"
                      (SEMICOLON)
# 496 "lexer.ml"

  | 53 ->
# 75 "lexer.mll"
                      (COMMA)
# 501 "lexer.ml"

  | 54 ->
# 76 "lexer.mll"
                      (FORALL)
# 506 "lexer.ml"

  | 55 ->
# 77 "lexer.mll"
                      (EXISTS)
# 511 "lexer.ml"

  | 56 ->
# 78 "lexer.mll"
                      (NFORALL)
# 516 "lexer.ml"

  | 57 ->
# 79 "lexer.mll"
                      (NEXISTS)
# 521 "lexer.ml"

  | 58 ->
# 80 "lexer.mll"
                      (POINT)
# 526 "lexer.ml"

  | 59 ->
# 81 "lexer.mll"
                      (SIZE)
# 531 "lexer.ml"

  | 60 ->
# 82 "lexer.mll"
                      (LENGTH)
# 536 "lexer.ml"

  | 61 ->
# 83 "lexer.mll"
                      (ADJACENT)
# 541 "lexer.ml"

  | 62 ->
# 84 "lexer.mll"
                      (SUM)
# 546 "lexer.ml"

  | 63 ->
# 85 "lexer.mll"
                      (TO)
# 551 "lexer.ml"

  | 64 ->
# 86 "lexer.mll"
                      (MEMBER)
# 556 "lexer.ml"

  | 65 ->
# 87 "lexer.mll"
                      (MEMBER)
# 561 "lexer.ml"

  | 66 ->
# 88 "lexer.mll"
                      (ARE)
# 566 "lexer.ml"

  | 67 ->
# 89 "lexer.mll"
                      (DISTINCT)
# 571 "lexer.ml"

  | 68 ->
# 90 "lexer.mll"
                      (DISTINCT)
# 576 "lexer.ml"

  | 69 ->
# 91 "lexer.mll"
                      (EQUIVALENT)
# 581 "lexer.ml"

  | 70 ->
# 92 "lexer.mll"
                      (DIFF)
# 586 "lexer.ml"

  | 71 ->
# 93 "lexer.mll"
                      (HALF)
# 591 "lexer.ml"

  | 72 ->
# 94 "lexer.mll"
                               (CELLDEC)
# 596 "lexer.ml"

  | 73 ->
# 95 "lexer.mll"
                      (INT (int_of_string (Lexing.lexeme lexbuf)))
# 601 "lexer.ml"

  | 74 ->
# 96 "lexer.mll"
                      (VAR (Lexing.lexeme lexbuf))
# 606 "lexer.ml"

  | 75 ->
# 97 "lexer.mll"
                      (next_line lexbuf; token lexbuf)
# 611 "lexer.ml"

  | 76 ->
# 98 "lexer.mll"
                      (EOF)
# 616 "lexer.ml"

  | 77 ->
let
# 99 "lexer.mll"
           c
# 622 "lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 99 "lexer.mll"
                      (failwith (Printf.sprintf "unexpected character: %C" c))
# 626 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

